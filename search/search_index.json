{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Coders for Causes Workshops \u00b6 This is where you can see all the materials for workshops that are presented to the volunteers of the project for each year. If you would to know more about us, please visit our website at codersforcauses.org","title":"Overview"},{"location":"#coders-for-causes-workshops","text":"This is where you can see all the materials for workshops that are presented to the volunteers of the project for each year. If you would to know more about us, please visit our website at codersforcauses.org","title":"Coders for Causes Workshops"},{"location":"contributions/","text":"Contributions \u00b6 Hi! We are happy that you thought of contributing! If you have any suggestions or issues, please raise it here . I would be happy if you could provide pull requests, if you know how to do it here . Structure \u00b6 Folder Structure \u00b6 The structure of this repo is as follows: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u251c\u2500\u2500 docs // Folders for documentation \u2502 \u251c\u2500\u2500 CNAME \u2502 \u251c\u2500\u2500 contributions.md \u2502 \u251c\u2500\u2500 deployment_and_automated_site_deployment.md \u2502 \u251c\u2500\u2500 flavoured_markdown.md \u2502 \u251c\u2500\u2500 images // Assets \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2502 \u2502 \u251c\u2500\u2500 index.md \u2502 \u2514\u2500\u2500 writing_markdown.md \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 mkdocs.yml // MkDocs Configuration \u251c\u2500\u2500 overrides \u2502 \u2514\u2500\u2500 partials \u2502 \u2514\u2500\u2500 footer.html \u251c\u2500\u2500 README.md \u2514\u2500\u2500 requirements.txt Installation \u00b6 Python \u00b6 Prerequisite You need to have Python installed to be able to use pip . There are a few ways of installing Python. You can use a package distributor like Anaconda Or you can just install Python . Once you have installed Python, install mkdocs requirements by opening a terminal and typing: 1 pip install -r requirements.txt Python Environments (Optional) however, it is good practice to use different environments for different purposes, in which case, for Anaconda, you would open a terminal and type: 1 2 conda create -n mkdocstutorial python conda activate mkdocstutorial then enter: 1 pip install -r requirements.txt Docker \u00b6 Just run docker-compose up , it should show the web server running at localhost:8000 Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. Very helpful when you want to take a look at the docs before deploying. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Deploy in github pages Web Documentation Configuration \u00b6 For full documentation visit: mkdocs.org for the generic MkDocs PyMdown Extensions for the different extensions that are installed MkDocs Material for the customisation of the web server documentation.","title":"Contributions"},{"location":"contributions/#contributions","text":"Hi! We are happy that you thought of contributing! If you have any suggestions or issues, please raise it here . I would be happy if you could provide pull requests, if you know how to do it here .","title":"Contributions"},{"location":"contributions/#structure","text":"","title":"Structure"},{"location":"contributions/#folder-structure","text":"The structure of this repo is as follows: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u251c\u2500\u2500 docs // Folders for documentation \u2502 \u251c\u2500\u2500 CNAME \u2502 \u251c\u2500\u2500 contributions.md \u2502 \u251c\u2500\u2500 deployment_and_automated_site_deployment.md \u2502 \u251c\u2500\u2500 flavoured_markdown.md \u2502 \u251c\u2500\u2500 images // Assets \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2502 \u2502 \u251c\u2500\u2500 index.md \u2502 \u2514\u2500\u2500 writing_markdown.md \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 mkdocs.yml // MkDocs Configuration \u251c\u2500\u2500 overrides \u2502 \u2514\u2500\u2500 partials \u2502 \u2514\u2500\u2500 footer.html \u251c\u2500\u2500 README.md \u2514\u2500\u2500 requirements.txt","title":"Folder Structure"},{"location":"contributions/#installation","text":"","title":"Installation"},{"location":"contributions/#python","text":"Prerequisite You need to have Python installed to be able to use pip . There are a few ways of installing Python. You can use a package distributor like Anaconda Or you can just install Python . Once you have installed Python, install mkdocs requirements by opening a terminal and typing: 1 pip install -r requirements.txt Python Environments (Optional) however, it is good practice to use different environments for different purposes, in which case, for Anaconda, you would open a terminal and type: 1 2 conda create -n mkdocstutorial python conda activate mkdocstutorial then enter: 1 pip install -r requirements.txt","title":"Python"},{"location":"contributions/#docker","text":"Just run docker-compose up , it should show the web server running at localhost:8000","title":"Docker"},{"location":"contributions/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. Very helpful when you want to take a look at the docs before deploying. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Deploy in github pages","title":"Commands"},{"location":"contributions/#web-documentation-configuration","text":"For full documentation visit: mkdocs.org for the generic MkDocs PyMdown Extensions for the different extensions that are installed MkDocs Material for the customisation of the web server documentation.","title":"Web Documentation Configuration"},{"location":"2021-2022-summer/","text":"Coders for Causes 2021/22 Summer Workshops \u00b6 This project period continues the two main projects from the winter of 2020 : Foodbank WAIS If you have not before seen the existing progress, see this video . These two projects have their own corresponding technology stacks being used, hence will dictate the workshops that will be held. Project Technology \u00b6 Foodbank \u00b6 Foodbank is mainly with frontend with React + TailwindCSS with Firebase and Notion CMS. WAIS \u00b6 WAIS is a full-stack application with Vue and Django. It uses Docker containerisation for both development (and production in the future). Workshop Recordings \u00b6 The workshop recordings will be held on our youtube channel .","title":"Overview"},{"location":"2021-2022-summer/#coders-for-causes-202122-summer-workshops","text":"This project period continues the two main projects from the winter of 2020 : Foodbank WAIS If you have not before seen the existing progress, see this video . These two projects have their own corresponding technology stacks being used, hence will dictate the workshops that will be held.","title":"Coders for Causes 2021/22 Summer Workshops"},{"location":"2021-2022-summer/#project-technology","text":"","title":"Project Technology"},{"location":"2021-2022-summer/#foodbank","text":"Foodbank is mainly with frontend with React + TailwindCSS with Firebase and Notion CMS.","title":"Foodbank"},{"location":"2021-2022-summer/#wais","text":"WAIS is a full-stack application with Vue and Django. It uses Docker containerisation for both development (and production in the future).","title":"WAIS"},{"location":"2021-2022-summer/#workshop-recordings","text":"The workshop recordings will be held on our youtube channel .","title":"Workshop Recordings"},{"location":"2021-2022-summer/introduction-to-web-development/","text":"Introduction to Web Development Space \u00b6 Navigating the Deep Dark Space of Web Development What and Why Web Development? \u00b6 What is web development? \u00b6 Websites development Web applications (client-side and server-side) development Why Web Development ? \u00b6 Accessibility and Portability Career and On-demand in job market Huge possibility to combine with other emerging technologies (e.g. IoT, Machine Learning) and industry (e.g. Health, Mining, O&G) Career in Web Development Source: Insights from Stack Overflow\u2019s 2016 survey of 50,000 developers \"Half of Developers are Web Developers\" FAQs about Web Development \u00b6 Why code websites, why not use drag and drops like Wordpress, WIX? \u00b6 Content Management System (CMS) Limitations on theme/template used Difficult to extend Cybersecurity More information CMS are one of the application of web development, but there are plenty more such as - internet of things, custom software for a particular industrial application (eg. using Machine Learning) CMS are usually limited to the template or plugin that you use. If those plugin don't exist, then it limits your productivity very much (difficulty to extend). CMS are usually built to cater for non-technical users. This means that thye become the subject of hackers. Think about a scenario where a hacker was able to find a vulnerability in WordPress, now every other WordPress site will be vulnerable. What is the best way to learn all these? \u00b6 In summary, the best way to learn: Do personal projects (inspiration + motivation) Do team projects (get peer reviews and correct bad practices straight away) Watch Online Courses (to figure out what is available) More Information To be told that you have to learn \"this, this, and that\" before you could do things is tiresome. Often times, we want to learn to be a developer so that we can create cool things like software where thousands of people can use the app. We don't tend to be a developer for the sake of us needing to watch endless videos on different things. Why does CFC not do mobile development as much as web development? \u00b6 App stores has a developer cost Easier to deal/teach web technologies Accessibility (mobile, sensors, tablets, laptops and PCs) Bigger open-source community Basics of Web and Limitation \u00b6 HTML What is it? Hypertext Markup Language Describes the structure of a web page Limitation Doesn\u2019t handle repeated content well No variables or calculation HTML Syntax 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Document </ title > </ head > < body > Hello World! </ body > </ html > CSS What is it? Cascading Style Sheets Describes the presentation of a web page Limitation Most css is quite similar (Handled by CSS Libraries) Not very dynamic (Handled by CSS Frameworks) CSS Syntax 1 2 3 4 5 6 7 8 9 body { background-color : #f0f0f0 ; font-family : sans-serif ; } . container { width : 80 % ; margin : 0 auto ; } JS What is it? JavaScript Used to program complex features on a web page Limitation Has the capability to modify the user interface, but becomes really tedious to modify interface (more about this in another workshop) JS Syntax 1 2 3 4 5 6 7 const bodySelector = document . querySelector ( 'body' ); const myFunction = () => { bodySelector . innerHTML = 'Hello World 2!' ; // Add a container class to space out bodySelector . classList . add ( 'container' ); } bodySelector . onclick = myFunction ; Modern Frameworks \u00b6 Websites can be much more\u2026 they can be web applications \u201cApp\u201d in a website (client-side rendering) Modern Frameworks React.js More mature and used more in industry Vue.js Growing fast in popularity and use. General Information Both are good to use and learn. Knowledge is transferable between the two frameworks. Comparison between HTML and JSX Highlighted portions are starting chunk of distinct code. HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 < div class = \"row\" > < div class = \"m-0 col-12 col-md-6 col-lg-3\" > < div class = \"text-center border-0 bg-transparent card\" > < div class = \"px-0 card-body\" > < i class = \"material-icons-sharp md-lg\" > devices </ i > < p class = \"mt-4 font-weight-bold text-monospace text-larger\" > Applications </ p > < p class = \"mb-0\" > Build custom web and mobile applications to engage with your audience </ p > </ div > </ div > </ div > < div class = \"m-0 col-12 col-md-6 col-lg-3\" > < div class = \"text-center border-0 bg-transparent card\" > < div class = \"px-0 card-body\" > < i class = \"material-icons-sharp md-lg\" > web </ i > < p class = \"mt-4 font-weight-bold text-monospace text-larger\" > Websites </ p > < p class = \"mb-0\" > Build new websites or optimise existing pages to improve online visibility </ p > </ div > </ div > </ div > < div class = \"m-0 col-12 col-md-6 col-lg-3\" > < div class = \"text-center border-0 bg-transparent card\" > < div class = \"px-0 card-body\" > < i class = \"material-icons-sharp md-lg\" > storage </ i > < p class = \"mt-4 font-weight-bold text-monospace text-larger\" > Data Storage </ p > < p class = \"mb-0\" > Design and create databases for efficient information storage and retrieval </ p > </ div > </ div > </ div > < div class = \"m-0 col-12 col-md-6 col-lg-3\" > < div class = \"text-center border-0 bg-transparent card\" > < div class = \"px-0 card-body\" > < i class = \"material-icons-sharp md-lg\" > how_to_reg </ i > < p class = \"mt-4 font-weight-bold text-monospace text-larger\" > Consulting </ p > < p class = \"mb-0\" > Empower your organisation through technical knowledge and advice </ p > </ div > </ div > </ div > </ div > JSX 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 import { memo } from 'react' import { Row , Col , Card , CardBody } from 'reactstrap' import services from 'data/services.json' const Service = ( props : { icon : string title : string description : string }) => ( < Card className = 'text-center border-0 bg-transparent' > < CardBody className = 'px-0' > < i className = 'material-icons-sharp md-lg' > { props . icon } < /i> < p className = 'mt-4 font-weight-bold text-monospace text-larger' > { props . title } < /p> < p className = 'mb-0' > { props . description } < /p> < /CardBody> < /Card> ) const Services = () => ( < Row > { services . map ( service => ( < Col xs = { 12 } md = { 6 } lg = { 12 / services . length } className = 'm-0' key = { service . title } > < Service {... service } /> < /Col> ))} < /Row> ) export default memo ( Services ) Server-side Applications (Backend) \u00b6 How do devices communicate? \u00b6 HTTP Request - Hypertext Transfer Protocol What do server applications do? \u00b6 Serve frontends (server-side rendering) Web API (Application Programming Interface) Serve data (usually from a database) Process Request (Sending emails or SMS, Machine Learning) Databases \u00b6 Place to store the data Mongodb Allows for database design to be modified without complex migration or data loss SQL Typically faster and better for large amounts of data or systems that need data consistency and reliability","title":"Introduction to Web Development"},{"location":"2021-2022-summer/introduction-to-web-development/#introduction-to-web-development-space","text":"Navigating the Deep Dark Space of Web Development","title":"Introduction to Web Development Space"},{"location":"2021-2022-summer/introduction-to-web-development/#what-and-why-web-development","text":"","title":"What and Why Web Development?"},{"location":"2021-2022-summer/introduction-to-web-development/#what-is-web-development","text":"Websites development Web applications (client-side and server-side) development","title":"What is web development?"},{"location":"2021-2022-summer/introduction-to-web-development/#why-web-development","text":"Accessibility and Portability Career and On-demand in job market Huge possibility to combine with other emerging technologies (e.g. IoT, Machine Learning) and industry (e.g. Health, Mining, O&G) Career in Web Development Source: Insights from Stack Overflow\u2019s 2016 survey of 50,000 developers \"Half of Developers are Web Developers\"","title":"Why Web Development ?"},{"location":"2021-2022-summer/introduction-to-web-development/#faqs-about-web-development","text":"","title":"FAQs about Web Development"},{"location":"2021-2022-summer/introduction-to-web-development/#why-code-websites-why-not-use-drag-and-drops-like-wordpress-wix","text":"Content Management System (CMS) Limitations on theme/template used Difficult to extend Cybersecurity More information CMS are one of the application of web development, but there are plenty more such as - internet of things, custom software for a particular industrial application (eg. using Machine Learning) CMS are usually limited to the template or plugin that you use. If those plugin don't exist, then it limits your productivity very much (difficulty to extend). CMS are usually built to cater for non-technical users. This means that thye become the subject of hackers. Think about a scenario where a hacker was able to find a vulnerability in WordPress, now every other WordPress site will be vulnerable.","title":"Why code websites, why not use drag and drops like Wordpress, WIX?"},{"location":"2021-2022-summer/introduction-to-web-development/#what-is-the-best-way-to-learn-all-these","text":"In summary, the best way to learn: Do personal projects (inspiration + motivation) Do team projects (get peer reviews and correct bad practices straight away) Watch Online Courses (to figure out what is available) More Information To be told that you have to learn \"this, this, and that\" before you could do things is tiresome. Often times, we want to learn to be a developer so that we can create cool things like software where thousands of people can use the app. We don't tend to be a developer for the sake of us needing to watch endless videos on different things.","title":"What is the best way to learn all these?"},{"location":"2021-2022-summer/introduction-to-web-development/#why-does-cfc-not-do-mobile-development-as-much-as-web-development","text":"App stores has a developer cost Easier to deal/teach web technologies Accessibility (mobile, sensors, tablets, laptops and PCs) Bigger open-source community","title":"Why does CFC not do mobile development as much as web development?"},{"location":"2021-2022-summer/introduction-to-web-development/#basics-of-web-and-limitation","text":"HTML What is it? Hypertext Markup Language Describes the structure of a web page Limitation Doesn\u2019t handle repeated content well No variables or calculation HTML Syntax 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta http-equiv = \"X-UA-Compatible\" content = \"IE=edge\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Document </ title > </ head > < body > Hello World! </ body > </ html > CSS What is it? Cascading Style Sheets Describes the presentation of a web page Limitation Most css is quite similar (Handled by CSS Libraries) Not very dynamic (Handled by CSS Frameworks) CSS Syntax 1 2 3 4 5 6 7 8 9 body { background-color : #f0f0f0 ; font-family : sans-serif ; } . container { width : 80 % ; margin : 0 auto ; } JS What is it? JavaScript Used to program complex features on a web page Limitation Has the capability to modify the user interface, but becomes really tedious to modify interface (more about this in another workshop) JS Syntax 1 2 3 4 5 6 7 const bodySelector = document . querySelector ( 'body' ); const myFunction = () => { bodySelector . innerHTML = 'Hello World 2!' ; // Add a container class to space out bodySelector . classList . add ( 'container' ); } bodySelector . onclick = myFunction ;","title":"Basics of Web and Limitation"},{"location":"2021-2022-summer/introduction-to-web-development/#modern-frameworks","text":"Websites can be much more\u2026 they can be web applications \u201cApp\u201d in a website (client-side rendering) Modern Frameworks React.js More mature and used more in industry Vue.js Growing fast in popularity and use. General Information Both are good to use and learn. Knowledge is transferable between the two frameworks. Comparison between HTML and JSX Highlighted portions are starting chunk of distinct code. HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 < div class = \"row\" > < div class = \"m-0 col-12 col-md-6 col-lg-3\" > < div class = \"text-center border-0 bg-transparent card\" > < div class = \"px-0 card-body\" > < i class = \"material-icons-sharp md-lg\" > devices </ i > < p class = \"mt-4 font-weight-bold text-monospace text-larger\" > Applications </ p > < p class = \"mb-0\" > Build custom web and mobile applications to engage with your audience </ p > </ div > </ div > </ div > < div class = \"m-0 col-12 col-md-6 col-lg-3\" > < div class = \"text-center border-0 bg-transparent card\" > < div class = \"px-0 card-body\" > < i class = \"material-icons-sharp md-lg\" > web </ i > < p class = \"mt-4 font-weight-bold text-monospace text-larger\" > Websites </ p > < p class = \"mb-0\" > Build new websites or optimise existing pages to improve online visibility </ p > </ div > </ div > </ div > < div class = \"m-0 col-12 col-md-6 col-lg-3\" > < div class = \"text-center border-0 bg-transparent card\" > < div class = \"px-0 card-body\" > < i class = \"material-icons-sharp md-lg\" > storage </ i > < p class = \"mt-4 font-weight-bold text-monospace text-larger\" > Data Storage </ p > < p class = \"mb-0\" > Design and create databases for efficient information storage and retrieval </ p > </ div > </ div > </ div > < div class = \"m-0 col-12 col-md-6 col-lg-3\" > < div class = \"text-center border-0 bg-transparent card\" > < div class = \"px-0 card-body\" > < i class = \"material-icons-sharp md-lg\" > how_to_reg </ i > < p class = \"mt-4 font-weight-bold text-monospace text-larger\" > Consulting </ p > < p class = \"mb-0\" > Empower your organisation through technical knowledge and advice </ p > </ div > </ div > </ div > </ div > JSX 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 import { memo } from 'react' import { Row , Col , Card , CardBody } from 'reactstrap' import services from 'data/services.json' const Service = ( props : { icon : string title : string description : string }) => ( < Card className = 'text-center border-0 bg-transparent' > < CardBody className = 'px-0' > < i className = 'material-icons-sharp md-lg' > { props . icon } < /i> < p className = 'mt-4 font-weight-bold text-monospace text-larger' > { props . title } < /p> < p className = 'mb-0' > { props . description } < /p> < /CardBody> < /Card> ) const Services = () => ( < Row > { services . map ( service => ( < Col xs = { 12 } md = { 6 } lg = { 12 / services . length } className = 'm-0' key = { service . title } > < Service {... service } /> < /Col> ))} < /Row> ) export default memo ( Services )","title":"Modern Frameworks"},{"location":"2021-2022-summer/introduction-to-web-development/#server-side-applications-backend","text":"","title":"Server-side Applications (Backend)"},{"location":"2021-2022-summer/introduction-to-web-development/#how-do-devices-communicate","text":"HTTP Request - Hypertext Transfer Protocol","title":"How do devices communicate?"},{"location":"2021-2022-summer/introduction-to-web-development/#what-do-server-applications-do","text":"Serve frontends (server-side rendering) Web API (Application Programming Interface) Serve data (usually from a database) Process Request (Sending emails or SMS, Machine Learning)","title":"What do server applications do?"},{"location":"2021-2022-summer/introduction-to-web-development/#databases","text":"Place to store the data Mongodb Allows for database design to be modified without complex migration or data loss SQL Typically faster and better for large amounts of data or systems that need data consistency and reliability","title":"Databases"},{"location":"2021-2022-summer/project-and-workshop-structure/","text":"Project and Workshop Structure \u00b6 Ways of Working \u00b6 (November 27 to February 24 excluding December 19 to January 4) = ~ 11 weeks for project 2 meetups every week (1 online mid-week, 1 on Saturday) Each Saturday meeting will have ~2-3 hour workshops. Some workshops will take the whole hour, while some workshops will take 15-30 minutes. The other time allocated is for working on project with supervision Most workshops will be introductory Workshop Schedule \u00b6 The following are rough guideline to the workshop schedules. All workshops are optional, you can attend any of them even if you are not on the specific team dedicated to it (be mindful that there may be time conflicts if it is with the other team). Most Workshops are introductory They will usually cover the following idea: why is it useful to learn it what are the different aspects of it that you will need to learn You will still have to put in the effort to learn it thoroughly. Date Workshop Name Recommended Team to attend Duration Saturday, 27 November 2021 Introduction to CFC + Web Development Space All ~1 hour Wednesday, 1 December 2021 Introduction to Web Basics All ~1-1.5 hour Saturday, 4 December 2021 Practical Software Engineering Practices All ~1 hour Saturday, 4 December 2021 Introduction to Frontend Frameworks All ~45 minutes - 1 hour Saturday, 4 December 2021 Introduction to React Foodbank ~45 minutes - 1 hour Saturday, 4 December 2021 Introduction to Vue WAIS ~45 minutes - 1 hour Saturday, 11 December 2021 Introduction to Django WAIS ~1 - 1.5 hours Saturday, 11 December 2021 Introduction to Typescript Foodbank ~30 minutes Saturday, 18 December 2021 MVC Codebase Structure / Frontend-Backend Integration All ~1-1.5 hour Saturday, 18 December 2021 Typical Codebase Structure All ~30 minutes - 1 hour Saturday, 18 December 2021 Package Manager - JavaScript and Python All ~1 hour Saturday, 8 January 2022 Introduction to Docker All ~1 hour Saturday, 8 January 2022 Automated Testing + CI/CD All ~1 hour Workshops after January 8, 2022 The workshops right here are still being decided upon. If you have an idea for a workshop that you would like to attend, please let us know! The one that are on consideration are: Deployment on Heroku, and Vercel Introduction to End-to-End Testing with Cypress Gitkraken Workshop Introduction to Prototyping with Figma Introduction to Linux and Command-Line Scripting - Bash","title":"Project and Workshop Structure"},{"location":"2021-2022-summer/project-and-workshop-structure/#project-and-workshop-structure","text":"","title":"Project and Workshop Structure"},{"location":"2021-2022-summer/project-and-workshop-structure/#ways-of-working","text":"(November 27 to February 24 excluding December 19 to January 4) = ~ 11 weeks for project 2 meetups every week (1 online mid-week, 1 on Saturday) Each Saturday meeting will have ~2-3 hour workshops. Some workshops will take the whole hour, while some workshops will take 15-30 minutes. The other time allocated is for working on project with supervision Most workshops will be introductory","title":"Ways of Working"},{"location":"2021-2022-summer/project-and-workshop-structure/#workshop-schedule","text":"The following are rough guideline to the workshop schedules. All workshops are optional, you can attend any of them even if you are not on the specific team dedicated to it (be mindful that there may be time conflicts if it is with the other team). Most Workshops are introductory They will usually cover the following idea: why is it useful to learn it what are the different aspects of it that you will need to learn You will still have to put in the effort to learn it thoroughly. Date Workshop Name Recommended Team to attend Duration Saturday, 27 November 2021 Introduction to CFC + Web Development Space All ~1 hour Wednesday, 1 December 2021 Introduction to Web Basics All ~1-1.5 hour Saturday, 4 December 2021 Practical Software Engineering Practices All ~1 hour Saturday, 4 December 2021 Introduction to Frontend Frameworks All ~45 minutes - 1 hour Saturday, 4 December 2021 Introduction to React Foodbank ~45 minutes - 1 hour Saturday, 4 December 2021 Introduction to Vue WAIS ~45 minutes - 1 hour Saturday, 11 December 2021 Introduction to Django WAIS ~1 - 1.5 hours Saturday, 11 December 2021 Introduction to Typescript Foodbank ~30 minutes Saturday, 18 December 2021 MVC Codebase Structure / Frontend-Backend Integration All ~1-1.5 hour Saturday, 18 December 2021 Typical Codebase Structure All ~30 minutes - 1 hour Saturday, 18 December 2021 Package Manager - JavaScript and Python All ~1 hour Saturday, 8 January 2022 Introduction to Docker All ~1 hour Saturday, 8 January 2022 Automated Testing + CI/CD All ~1 hour Workshops after January 8, 2022 The workshops right here are still being decided upon. If you have an idea for a workshop that you would like to attend, please let us know! The one that are on consideration are: Deployment on Heroku, and Vercel Introduction to End-to-End Testing with Cypress Gitkraken Workshop Introduction to Prototyping with Figma Introduction to Linux and Command-Line Scripting - Bash","title":"Workshop Schedule"},{"location":"2021-2022-summer/setup/","text":"Setup \u00b6 This contains everything you need to know about getting setup. Coders for Causes Project Team \u00b6 The following access you will need to have when working on the project Coders for Causes Official Project Organisation This includes the project repositories and CFC related long-term materials Coders for Causes Learning Organisation This includes the templates for learning as well as the demo workshops Discord Channel for Project and exclusive Workshops Developer Tools \u00b6 These are the following tools that you need: Code Editor: VS Code Version Control: Git Interpreter: Nodejs Custom Package Manager: Yarn Interpreter (for WAIS): Python Containerisation (for WAIS): Docker Optional Tools These are tools that you may like to use, but are not required: GUI for Git: Gitkraken / GitHub Desktop After these installation, seek at the OS-specific tools. Windows \u00b6 These are tools specifically for Windows: Virtual Machine: Vbox You need this if you have some trouble with windows Warning for Windows Users Legit, among all the OS, you will have the most frustrating time as a developer in windows (unless you're doing C#) Wanna have a better developer experience You have a couple of options: Using WSL Dual Booting Virtual Machines The recommended OS to try is Ubuntu-based Linux. My personal favourite is PopOS. Linux \u00b6 These are installation specific to Linux: Docker Post Install Lots of user forget this documentation","title":"Setup"},{"location":"2021-2022-summer/setup/#setup","text":"This contains everything you need to know about getting setup.","title":"Setup"},{"location":"2021-2022-summer/setup/#coders-for-causes-project-team","text":"The following access you will need to have when working on the project Coders for Causes Official Project Organisation This includes the project repositories and CFC related long-term materials Coders for Causes Learning Organisation This includes the templates for learning as well as the demo workshops Discord Channel for Project and exclusive Workshops","title":"Coders for Causes Project Team"},{"location":"2021-2022-summer/setup/#developer-tools","text":"These are the following tools that you need: Code Editor: VS Code Version Control: Git Interpreter: Nodejs Custom Package Manager: Yarn Interpreter (for WAIS): Python Containerisation (for WAIS): Docker Optional Tools These are tools that you may like to use, but are not required: GUI for Git: Gitkraken / GitHub Desktop After these installation, seek at the OS-specific tools.","title":"Developer Tools"},{"location":"2021-2022-summer/setup/#windows","text":"These are tools specifically for Windows: Virtual Machine: Vbox You need this if you have some trouble with windows Warning for Windows Users Legit, among all the OS, you will have the most frustrating time as a developer in windows (unless you're doing C#) Wanna have a better developer experience You have a couple of options: Using WSL Dual Booting Virtual Machines The recommended OS to try is Ubuntu-based Linux. My personal favourite is PopOS.","title":"Windows"},{"location":"2021-2022-summer/setup/#linux","text":"These are installation specific to Linux: Docker Post Install Lots of user forget this documentation","title":"Linux"},{"location":"2021-winter/","text":"Coders for Causes 2021 Winter Workshops \u00b6 This project period there are two main projects: Foodbank WAIS If you have not before seen the existing progress, see this video . These two projects have their own corresponding technology stacks being used, hence will dictate the workshops that will be held. Project Technology \u00b6 Foodbank \u00b6 Foodbank is mainly with frontend with React + TailwindCSS with Firebase and Notion CMS. WAIS \u00b6 WAIS is a full-stack application with Vue and Django. It uses Docker containerisation for both development (and production in the future). Where are the materials? \u00b6 This website has only been created prior to 2021/22 Summer workshops. However, you can find the videos in our Youtube channel , and workshops slides in google drive .","title":"Overview"},{"location":"2021-winter/#coders-for-causes-2021-winter-workshops","text":"This project period there are two main projects: Foodbank WAIS If you have not before seen the existing progress, see this video . These two projects have their own corresponding technology stacks being used, hence will dictate the workshops that will be held.","title":"Coders for Causes 2021 Winter Workshops"},{"location":"2021-winter/#project-technology","text":"","title":"Project Technology"},{"location":"2021-winter/#foodbank","text":"Foodbank is mainly with frontend with React + TailwindCSS with Firebase and Notion CMS.","title":"Foodbank"},{"location":"2021-winter/#wais","text":"WAIS is a full-stack application with Vue and Django. It uses Docker containerisation for both development (and production in the future).","title":"WAIS"},{"location":"2021-winter/#where-are-the-materials","text":"This website has only been created prior to 2021/22 Summer workshops. However, you can find the videos in our Youtube channel , and workshops slides in google drive .","title":"Where are the materials?"}]}