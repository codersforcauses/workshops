{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Coders for Causes Workshops \u00b6 This is where you can see all the materials for workshops that are presented to the volunteers of the project for each year. If you would to know more about us, please visit our website at codersforcauses.org","title":"Overview"},{"location":"#coders-for-causes-workshops","text":"This is where you can see all the materials for workshops that are presented to the volunteers of the project for each year. If you would to know more about us, please visit our website at codersforcauses.org","title":"Coders for Causes Workshops"},{"location":"contributions/","text":"Contributions \u00b6 Hi! We are happy that you thought of contributing! If you have any suggestions or issues, please raise it here . I would be happy if you could provide pull requests, if you know how to do it here . Structure \u00b6 Folder Structure \u00b6 The structure of this repo is as follows: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u251c\u2500\u2500 docs // Folders for documentation \u2502 \u251c\u2500\u2500 CNAME \u2502 \u251c\u2500\u2500 contributions.md \u2502 \u251c\u2500\u2500 deployment_and_automated_site_deployment.md \u2502 \u251c\u2500\u2500 flavoured_markdown.md \u2502 \u251c\u2500\u2500 images // Assets \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2502 \u2502 \u251c\u2500\u2500 index.md \u2502 \u2514\u2500\u2500 writing_markdown.md \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 mkdocs.yml // MkDocs Configuration \u251c\u2500\u2500 overrides \u2502 \u2514\u2500\u2500 partials \u2502 \u2514\u2500\u2500 footer.html \u251c\u2500\u2500 README.md \u2514\u2500\u2500 requirements.txt Installation \u00b6 Python \u00b6 Prerequisite You need to have Python installed to be able to use pip . There are a few ways of installing Python. You can use a package distributor like Anaconda Or you can just install Python . Once you have installed Python, install mkdocs requirements by opening a terminal and typing: 1 pip install -r requirements.txt Python Environments (Optional) however, it is good practice to use different environments for different purposes, in which case, for Anaconda, you would open a terminal and type: 1 2 conda create -n mkdocstutorial python conda activate mkdocstutorial then enter: 1 pip install -r requirements.txt Docker \u00b6 Just run docker-compose up , it should show the web server running at localhost:8000 Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. Very helpful when you want to take a look at the docs before deploying. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Deploy in github pages Web Documentation Configuration \u00b6 For full documentation visit: mkdocs.org for the generic MkDocs PyMdown Extensions for the different extensions that are installed MkDocs Material for the customisation of the web server documentation.","title":"Contributions"},{"location":"contributions/#contributions","text":"Hi! We are happy that you thought of contributing! If you have any suggestions or issues, please raise it here . I would be happy if you could provide pull requests, if you know how to do it here .","title":"Contributions"},{"location":"contributions/#structure","text":"","title":"Structure"},{"location":"contributions/#folder-structure","text":"The structure of this repo is as follows: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u251c\u2500\u2500 docs // Folders for documentation \u2502 \u251c\u2500\u2500 CNAME \u2502 \u251c\u2500\u2500 contributions.md \u2502 \u251c\u2500\u2500 deployment_and_automated_site_deployment.md \u2502 \u251c\u2500\u2500 flavoured_markdown.md \u2502 \u251c\u2500\u2500 images // Assets \u2502 \u2502 \u2514\u2500\u2500 ... \u2502 \u2502 \u2502 \u251c\u2500\u2500 index.md \u2502 \u2514\u2500\u2500 writing_markdown.md \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 mkdocs.yml // MkDocs Configuration \u251c\u2500\u2500 overrides \u2502 \u2514\u2500\u2500 partials \u2502 \u2514\u2500\u2500 footer.html \u251c\u2500\u2500 README.md \u2514\u2500\u2500 requirements.txt","title":"Folder Structure"},{"location":"contributions/#installation","text":"","title":"Installation"},{"location":"contributions/#python","text":"Prerequisite You need to have Python installed to be able to use pip . There are a few ways of installing Python. You can use a package distributor like Anaconda Or you can just install Python . Once you have installed Python, install mkdocs requirements by opening a terminal and typing: 1 pip install -r requirements.txt Python Environments (Optional) however, it is good practice to use different environments for different purposes, in which case, for Anaconda, you would open a terminal and type: 1 2 conda create -n mkdocstutorial python conda activate mkdocstutorial then enter: 1 pip install -r requirements.txt","title":"Python"},{"location":"contributions/#docker","text":"Just run docker-compose up , it should show the web server running at localhost:8000","title":"Docker"},{"location":"contributions/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. Very helpful when you want to take a look at the docs before deploying. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. mkdocs gh-deploy - Deploy in github pages","title":"Commands"},{"location":"contributions/#web-documentation-configuration","text":"For full documentation visit: mkdocs.org for the generic MkDocs PyMdown Extensions for the different extensions that are installed MkDocs Material for the customisation of the web server documentation.","title":"Web Documentation Configuration"},{"location":"2021-2022-summer/","text":"Coders for Causes 2021/22 Summer Workshops \u00b6 This project period continues the two main projects from the winter of 2020 : Foodbank WAIS If you have not before seen the existing progress, see this video . These two projects have their own corresponding technology stacks being used, hence will dictate the workshops that will be held. Project Technology \u00b6 Foodbank \u00b6 Foodbank is mainly with frontend with React + NextJS + TypeScript + TailwindCSS with Firebase and Notion CMS. WAIS \u00b6 WAIS is a full-stack application with Vue and Django. It uses Docker containerisation for both development (and production in the future). Workshop Recordings \u00b6 The workshop recordings will be held on our youtube channel .","title":"Overview"},{"location":"2021-2022-summer/#coders-for-causes-202122-summer-workshops","text":"This project period continues the two main projects from the winter of 2020 : Foodbank WAIS If you have not before seen the existing progress, see this video . These two projects have their own corresponding technology stacks being used, hence will dictate the workshops that will be held.","title":"Coders for Causes 2021/22 Summer Workshops"},{"location":"2021-2022-summer/#project-technology","text":"","title":"Project Technology"},{"location":"2021-2022-summer/#foodbank","text":"Foodbank is mainly with frontend with React + NextJS + TypeScript + TailwindCSS with Firebase and Notion CMS.","title":"Foodbank"},{"location":"2021-2022-summer/#wais","text":"WAIS is a full-stack application with Vue and Django. It uses Docker containerisation for both development (and production in the future).","title":"WAIS"},{"location":"2021-2022-summer/#workshop-recordings","text":"The workshop recordings will be held on our youtube channel .","title":"Workshop Recordings"},{"location":"2021-winter/","text":"Coders for Causes 2021 Winter Workshops \u00b6 This project period there are two main projects: Foodbank WAIS If you have not before seen the existing progress, see this video . These two projects have their own corresponding technology stacks being used, hence will dictate the workshops that will be held. Project Technology \u00b6 Foodbank \u00b6 Foodbank is mainly with frontend with React + TailwindCSS with Firebase and Notion CMS. WAIS \u00b6 WAIS is a full-stack application with Vue and Django. It uses Docker containerisation for both development (and production in the future). Where are the materials? \u00b6 This website has only been created prior to 2021/22 Summer workshops. However, you can find the videos in our Youtube channel , and workshops slides in google drive .","title":"Overview"},{"location":"2021-winter/#coders-for-causes-2021-winter-workshops","text":"This project period there are two main projects: Foodbank WAIS If you have not before seen the existing progress, see this video . These two projects have their own corresponding technology stacks being used, hence will dictate the workshops that will be held.","title":"Coders for Causes 2021 Winter Workshops"},{"location":"2021-winter/#project-technology","text":"","title":"Project Technology"},{"location":"2021-winter/#foodbank","text":"Foodbank is mainly with frontend with React + TailwindCSS with Firebase and Notion CMS.","title":"Foodbank"},{"location":"2021-winter/#wais","text":"WAIS is a full-stack application with Vue and Django. It uses Docker containerisation for both development (and production in the future).","title":"WAIS"},{"location":"2021-winter/#where-are-the-materials","text":"This website has only been created prior to 2021/22 Summer workshops. However, you can find the videos in our Youtube channel , and workshops slides in google drive .","title":"Where are the materials?"}]}